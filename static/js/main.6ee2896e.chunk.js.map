{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/survey.js","components/survey/CreateSurvey.js","components/survey/IndexSurveys.js","components/survey/Survey.js","components/survey/UpdateSurvey.js","components/survey/EditQuestions.js","api/question.js","api/response.js","components/survey/TakeSurvey.js","components/survey/Responses.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","indexSurveys","showSurvey","CreateSurvey","onCreateSurvey","survey","title","text","createSurvey","_id","IndexSurveys","viewAllSurveys","surveys","filter","owner","owned","viewYourSurveys","goBack","titleJSX","map","onClick","Survey","deleteClick","match","params","deleteSurvey","console","updateClick","takeSurvey","response","log","questionJSX","buttonJSX","questions","length","question","UpdateSurvey","onUpdateSurvey","updateSurvey","test","EditQuestions","onShowSurvey","i","qId","undefined","option","surveyId","content","createQuestion","sId","setJSX","updateQuestion","amt","deleteDynamic","num","getAttribute","r","parseInt","deleteQuestion","addQuestion","maxLength","disabled","data-num","data-id","createResponse","TakeSurvey","completed","allSurveys","responses","taken","Responses","componentDidMount","o","t","includes","App","msgAlerts","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"8RA8BeA,EAxBY,SAAC,GAKrB,IAJLC,EAII,EAJJA,KACWC,EAGP,EAHJC,UACAC,EAEI,EAFJA,OACGC,EACC,iBAEJ,OAAIJ,GAAQG,EACH,cAAC,IAAD,2BAAWC,GAAX,IAAiBD,OAAQA,KAM9B,cAAC,IAAD,2BACMC,GADN,IAEED,OAAQ,SAACE,GAAD,OACNL,EAAO,cAACC,EAAD,eAAeI,IAAY,cAAC,IAAD,CAAUC,GAAG,W,QC0B1CC,G,wDA3Cb,WAAaF,GAAQ,IAAD,8BAClB,cAAMA,IAeVG,YAAc,kBAAM,EAAKC,SAAS,CAAEC,MAAM,KAdtC,EAAKC,MAAQ,CACXD,MAAM,GAER,EAAKE,UAAY,KALC,E,qDAQpB,WACEC,KAAKD,UAAYE,WAAWD,KAAKL,YAAa,O,kCAGhD,WACEO,aAAaF,KAAKD,a,oBAKtB,WACE,MAAuDC,KAAKR,MAApDW,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,YAAaC,EAAhD,EAAgDA,GAShD,OANKP,KAAKF,MAAMD,MACdI,YAAW,WACTK,EAAYC,KACX,KAIH,cAACC,EAAA,EAAD,CACEC,aAAW,EACXZ,KAAMG,KAAKF,MAAMD,KACjBM,QAASA,EACTO,QAASV,KAAKL,YAJhB,SAKE,sBAAKgB,UAAU,YAAf,UACE,cAACH,EAAA,EAAMI,QAAP,UAAgBR,IAChB,mBAAGO,UAAU,aAAb,SAA2BN,a,GArCJQ,IAAMzB,Y,wBCA/B0B,EACJ,eAAC,WAAD,WACE,cAAC,IAAD,CAASrB,GAAG,mBAAmBkB,UAAU,WAAzC,6BACA,cAAC,IAAD,CAASlB,GAAG,cAAckB,UAAU,WAApC,2BACA,cAAC,IAAD,CAASlB,GAAG,WAAWkB,UAAU,WAAjC,qBACA,cAAC,IAAD,CAASlB,GAAG,YAAYkB,UAAU,WAAlC,sBACA,cAAC,IAAD,CAASlB,GAAG,QAAQkB,UAAU,WAA9B,qBAIEI,EACJ,eAAC,WAAD,WACE,cAAC,IAAD,CAAStB,GAAG,WAAWkB,UAAU,WAAjC,qBACA,cAAC,IAAD,CAASlB,GAAG,WAAWkB,UAAU,WAAjC,wBAIEK,EACJ,cAAC,WAAD,UACE,cAAC,IAAD,CAASC,OAAK,EAACxB,GAAG,IAAIkB,UAAU,WAAhC,oBAsBWO,EAlBA,SAAC,GAAD,IAAG/B,EAAH,EAAGA,KAAH,OACb,eAACgC,EAAA,EAAD,CAAQC,GAAG,UAAUjB,QAAQ,OAAOkB,OAAO,KAA3C,UACE,cAACF,EAAA,EAAOG,MAAR,UACE,cAAC,IAAD,CAAM7B,GAAG,IAAI8B,MAAO,CAAEC,MAAO,OAAQC,eAAgB,QAArD,2BAEF,cAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,cAACR,EAAA,EAAOS,SAAR,CAAiBrB,GAAG,mBAApB,SACE,eAACsB,EAAA,EAAD,CAAKlB,UAAU,UAAf,UACGxB,GACC,uBAAMwB,UAAU,mBAAhB,sBAA6CxB,EAAK2C,SAEnDd,EACA7B,EAAO2B,EAAuBC,W,OCvCjCgB,EACQ,gDADRA,EAES,wBASAC,EANkB,cAA7BC,OAAOC,SAASC,SACTJ,EAEAA,E,iBCQEK,EAAS,SAACC,GACrB,OAAOC,IAAM,CACXC,IAAKP,EAAS,YACdQ,OAAQ,OACRC,KAAM,CACJJ,YAAa,CACXP,MAAOO,EAAYP,MACnBY,SAAUL,EAAYK,c,eCfxBC,E,kDACJ,WAAanD,GAAQ,IAAD,8BAClB,cAAMA,IASVoD,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAZhB,EAetBC,SAAW,SAACJ,GACVA,EAAMK,iBAEN,IDzBqBb,ECyBrB,EAAuC,EAAK7C,MAApC2D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,SDzBNhB,EC2Bd,EAAKvC,MD1BLwC,IAAM,CACXE,OAAQ,OACRD,IAAKP,EAAS,YACdS,KAAM,CACJJ,YAAa,CACXP,MAAOO,EAAYP,MACnBY,SAAUL,EAAYK,SACtBY,sBAAuBjB,EAAYkB,0BCoBtCC,MAAK,kBAAMpB,EAAO,EAAKtC,UACvB0D,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIhB,KAAKtD,SAC/BqE,MAAK,kBACJL,EAAS,CACP/C,QAAS,kBACTC,QCpCqB,yDDqCrBF,QAAS,eAGZqD,MAAK,kBAAMJ,EAAQM,KAAK,QACxBC,OAAM,SAACC,GACN,EAAKhE,SAAS,CAAEkC,MAAO,GAAIY,SAAU,GAAIa,qBAAsB,KAC/DJ,EAAS,CACP/C,QAAS,8BAAgCwD,EAAMvD,QAC/CA,QC5CqB,qED6CrBF,QAAS,eAjCb,EAAKL,MAAQ,CACXgC,MAAO,GACPY,SAAU,GACVa,qBAAsB,IANN,E,0CAyCtB,WACE,MAAkDvD,KAAKF,MAA/CgC,EAAR,EAAQA,MAAOY,EAAf,EAAeA,SAAUa,EAAzB,EAAyBA,qBAEzB,OACE,qBAAK5C,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAACkD,EAAA,EAAD,CAAMC,SAAU9D,KAAKiD,SAArB,UACE,eAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLrB,KAAK,QACLC,MAAOlB,EACPuC,YAAY,cACZC,SAAUtE,KAAK4C,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRpB,KAAK,WACLC,MAAON,EACP0B,KAAK,WACLC,YAAY,WACZC,SAAUtE,KAAK4C,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAU,uBAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oCACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRpB,KAAK,uBACLC,MAAOO,EACPa,KAAK,WACLC,YAAY,mBACZC,SAAUtE,KAAK4C,kBAGnB,cAAC2B,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,gC,GAnFWhF,aA2FNoF,cAAW7B,GE3FpB8B,E,kDACJ,WAAajF,GAAQ,IAAD,8BAClB,cAAMA,IAQVoD,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAXhB,EActB0B,SAAW,SAAC7B,GACVA,EAAMK,iBAEN,MAAuC,EAAK1D,MAApC2D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,QAE3BjB,EAAO,EAAKtC,OACT0D,MAAK,SAACC,GAAD,OAASJ,EAAQI,EAAIhB,KAAKtD,SAC/BqE,MAAK,kBACJL,EAAS,CACP/C,QAAS,kBACTC,QDhCqB,WCiCrBF,QAAS,eAGZqD,MAAK,kBAAMJ,EAAQM,KAAK,QACxBC,OAAM,SAACC,GACN,EAAKhE,SAAS,CAAEkC,MAAO,GAAIY,SAAU,KACrCS,EAAS,CACP/C,QAAS,8BAAgCwD,EAAMvD,QAC/CA,QDxCqB,kECyCrBF,QAAS,eA/Bb,EAAKL,MAAQ,CACXgC,MAAO,GACPY,SAAU,IALM,E,0CAuCtB,WACE,MAA4B1C,KAAKF,MAAzBgC,EAAR,EAAQA,MAAOY,EAAf,EAAeA,SAEf,OACE,qBAAK/B,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,yCACA,eAACkD,EAAA,EAAD,CAAMC,SAAU9D,KAAK0E,SAArB,UACE,eAACb,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,4BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLrB,KAAK,QACLC,MAAOlB,EACPuC,YAAY,cACZC,SAAUtE,KAAK4C,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAU,WAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRpB,KAAK,WACLC,MAAON,EACP0B,KAAK,WACLC,YAAY,WACZC,SAAUtE,KAAK4C,kBAGnB,cAAC2B,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,gC,GAtEWhF,aA8ENoF,cAAWC,GCjFpBE,E,uKACJ,WACE,MAA+C3E,KAAKR,MAA5C2D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASwB,EAA3B,EAA2BA,WJsBR,SAACzF,GACtB,OAAOmD,IAAM,CACXC,IAAKP,EAAS,aACdQ,OAAQ,SACRqC,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,WIzBhCC,CAFA,EAAsC7F,MAGnC8F,SAAQ,kBACP9B,EAAS,CACP/C,QAAS,0BACTC,QFVoB,kBEWpBF,QAAS,eAGZ8E,SAAQ,kBAAM7B,EAAQM,KAAK,QAC3BuB,SAAQ,kBAAML,S,oBAGnB,WACE,MAAO,O,GAjBWxF,aAqBPoF,cAAWG,GClBpBO,E,kDACJ,WAAa1F,GAAQ,IAAD,8BAClB,cAAMA,IAQVoD,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAXhB,EActBmC,iBAAmB,SAACtC,GAClBA,EAAMK,iBAEN,MAAoC,EAAK1D,MAAjC2D,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASjE,EAA3B,EAA2BA,MLaC,SAACiG,EAAWjG,GACxC,OAAOmD,IAAM,CACXC,IAAKP,EAAS,oBACdQ,OAAQ,QACRqC,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJ2C,UAAW,CACTC,IAAKD,EAAUE,YACfC,IAAKH,EAAUI,iBKrBrBC,CAAe,EAAK3F,MAAOX,GACxBqE,MAAK,kBACJL,EAAS,CACP/C,QAAS,0BACTC,QH5B6B,iCG6B7BF,QAAS,eAGZqD,MAAK,kBAAMJ,EAAQM,KAAK,QACxBC,OAAM,SAACC,GACN,EAAKhE,SAAS,CAAE0F,YAAa,GAAIE,YAAa,KAC9CrC,EAAS,CACP/C,QAAS,sCAAwCwD,EAAMvD,QACvDA,QHpC6B,qEGqC7BF,QAAS,eA9Bb,EAAKL,MAAQ,CACXwF,YAAa,GACbE,YAAa,IALG,E,0CAsCtB,WACE,MAAqCxF,KAAKF,MAAlCwF,EAAR,EAAQA,YAAaE,EAArB,EAAqBA,YAErB,OACE,qBAAK7E,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,iDACA,eAACkD,EAAA,EAAD,CAAMC,SAAU9D,KAAKmF,iBAArB,UACE,eAACtB,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRpB,KAAK,cACLC,MAAOsC,EACPlB,KAAK,WACLC,YAAY,eACZC,SAAUtE,KAAK4C,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAU,cAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRpB,KAAK,cACLC,MAAOwC,EACPpB,KAAK,WACLC,YAAY,eACZC,SAAUtE,KAAK4C,kBAGnB,cAAC2B,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,gC,GArEmBhF,aA6EdoF,cAAWU,GCnEbQ,EAAe,SAACvG,GAC3B,OAAOmD,IAAM,CACXE,OAAQ,MACRD,IAAKP,EAAS,YACd6C,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,WAKvBY,EAAa,SAACxG,EAAMoB,GAC/B,OAAO+B,IAAM,CACXE,OAAQ,MACRD,IAAKP,EAAS,YAAczB,EAC5BsE,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,WC5B9Ba,E,kDACJ,WAAapG,GAAQ,IAAD,8BAClB,cAAMA,IASRoD,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAZlB,EAepB6C,eAAiB,SAAChD,GAChBA,EAAMK,iBAEN,MAAoC,EAAK1D,MAAjC2D,EAAR,EAAQA,SAAUhE,EAAlB,EAAkBA,KAAMiE,EAAxB,EAAwBA,SDtBA,SAAC0C,EAAQ3G,GACnC,OAAOmD,IAAM,CACXE,OAAQ,OACRD,IAAKP,EAAS,YACd6C,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJqD,OAAQ,CACNC,MAAOD,EAAOC,MACdC,KAAMF,EAAOE,UCcjBC,CAAa,EAAKnG,MAAOX,GACtBqE,MAAK,SAACC,GAAD,OAAS,EAAK7D,SAAS,CAAEW,GAAIkD,EAAIhB,KAAKqD,OAAOI,SAClD1C,MAAK,kBACJL,EAAS,CACP/C,QAAS,wBACTC,QAAS,UACTF,QAAS,eAGZqD,MAAK,kBAAMJ,EAAQM,KAAK,YAAc,EAAK5D,MAAMS,OACjDoD,OAAM,SAACC,GAENT,EAAS,CACP/C,QAAS,QACTC,QAAS,SAAWuD,EAAMvD,QAC1BF,QAAS,eAhCf,EAAKL,MAAQ,CACXiG,MAAO,GACPC,KAAM,GACNzF,GAAI,IANY,E,0CAwCpB,WACE,MAAwBP,KAAKF,MAArBiG,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KAEf,OACE,qBAAKrF,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,+CACA,eAACkD,EAAA,EAAD,CAAMC,SAAU9D,KAAK6F,eAArB,UACE,eAAChC,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLrB,KAAK,QACLC,MAAO+C,EACP1B,YAAY,cACZC,SAAUtE,KAAK4C,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CACEnB,KAAK,OACLC,MAAOgD,EACP5B,KAAK,OACLC,YAAY,oBACZC,SAAUtE,KAAK4C,kBAGnB,cAAC2B,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,gC,GAtEehF,aA8EZoF,cAAWoB,GChFpBO,E,kDACJ,WAAa3G,GAAQ,IAAD,8BAClB,cAAMA,IAQR4G,eAAiB,WACf,MAA2B,EAAK5G,MAAxB2D,EAAR,EAAQA,SAAUhE,EAAlB,EAAkBA,KAClBuG,EAAavG,GACVqE,MAAK,SAACC,GAAD,OAASA,EAAIhB,KAAK4D,QAAQC,QAAO,SAACR,GAAD,OAAYA,EAAOS,QAAU,EAAK/G,MAAML,KAAK+G,UACnF1C,MAAK,SAACC,GAAD,OAAS,EAAK7D,SAAS,CAAEyG,QAAS5C,EAAK5D,MAAM,EAAM2G,OAAO,OAC/DhD,MAAK,kBACJL,EAAS,CACP/C,QAAS,uBACTC,QAAS,UACTF,QAAS,eAGZwD,OAAM,SAACC,GACNT,EAAS,CACP/C,QAAS,QACTC,QAAS,SAAWuD,EAAMvD,QAC1BF,QAAS,eAzBG,EA8BpBsG,gBAAkB,WAChB,MAA2B,EAAKjH,MAAxB2D,EAAR,EAAQA,SAAUhE,EAAlB,EAAkBA,KAClBuG,EAAavG,GACVqE,MAAK,SAACC,GAAD,OAASA,EAAIhB,KAAK4D,QAAQC,QAAO,SAACR,GAAD,OAAYA,EAAOS,QAAU,EAAK/G,MAAML,KAAK+G,UACnF1C,MAAK,SAACC,GAAD,OAAS,EAAK7D,SAAS,CAAEyG,QAAS5C,EAAK5D,MAAM,EAAM2G,OAAO,OAC/DhD,MAAK,kBACJL,EAAS,CACP/C,QAAS,uBACTC,QAAS,UACTF,QAAS,eAGZwD,OAAM,SAACC,GACNT,EAAS,CACP/C,QAAS,QACTC,QAAS,SAAWuD,EAAMvD,QAC1BF,QAAS,eA9CG,EAmDpBuG,OAAS,WACP,EAAK9G,SAAS,CAAEC,MAAM,KAlDtB,EAAKC,MAAQ,CACXuG,QAAS,KACTxG,MAAM,EACN2G,OAAO,GALS,E,0CAuDpB,WACE,IACIG,EADJ,EAAiC3G,KAAKF,MAA9BuG,EAAR,EAAQA,QAASxG,EAAjB,EAAiBA,KAOjB,OAJE8G,EAHF,EAAuBH,MAGV,8CAEA,6CAET3G,EACc,OAAZwG,EACK,aAGL,qBAAK1F,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACGgG,EACAN,EAAQO,KAAI,SAAAd,GAEX,OAAO,oBAAIvF,GAAIuF,EAAOI,IAAf,SAAqC,cAAC,IAAD,CAAMzG,GAAI,YAAcqG,EAAOI,IAA/B,SAAqCJ,EAAOC,SAAxDD,EAAOI,QAEzC,wBAAQW,QAAS7G,KAAK0G,OAAtB,uBAQR,qCACE,wBAAQG,QAAS7G,KAAKoG,eAAtB,8BADF,IACkE,uBAChE,wBAAQS,QAAS7G,KAAKyG,gBAAtB,sC,GAtFmBrH,aA4FZoF,cAAW2B,GC5FpBW,E,kDACJ,WAAatH,GAAQ,IAAD,8BAClB,cAAMA,IAoBRuH,YAAc,WACZ,IAAMxG,EAAK,EAAKf,MAAMwH,MAAMC,OAAO1G,GACnC,EAA0B,EAAKf,MAAvBL,EAAR,EAAQA,KAAMiE,EAAd,EAAcA,SHWU,SAACjE,EAAMoB,GACjC,OAAO+B,IAAM,CACXE,OAAQ,SACRD,IAAKP,EAAS,YAAczB,EAC5BsE,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,WGfhCmC,CAAa/H,EAAMoB,GAChBiD,MAAK,kBAAMJ,EAAQM,KAAK,eACxBC,MAAMwD,QAAQvD,QA1BC,EA6BpBwD,YAAc,WACQ,EAAK5H,MAAjB4D,QACAM,KAAK,YAAc,EAAKlE,MAAMwH,MAAMC,OAAO1G,GAAK,YA/BtC,EAkCpB8G,WAAa,WACX,EAAKzH,SAAS,CAAEyH,YAAY,KAjC5B,EAAKvH,MAAQ,CACXgG,OAAQ,KACRuB,YAAY,GAJI,E,qDAQpB,WAAsB,IAAD,OACb9G,EAAKP,KAAKR,MAAMwH,MAAMC,OAAO1G,GAC3BpB,EAASa,KAAKR,MAAdL,KACRwG,EAAWxG,EAAMoB,GAEdiD,MAAK,SAAC8D,GAAD,OAAc,EAAK1H,SAAS,CAAEkG,OAAQwB,EAAS7E,KAAKqD,YACzDtC,MAAK,WACJ2D,QAAQI,IAAI,EAAKzH,MAAMgG,OAAOS,OAC9BY,QAAQI,IAAIpI,EAAK+G,QAElBvC,MAAMwD,QAAQvD,S,oBAoBnB,WACE,IAMI4D,EAQAC,EAdJ,EAA+BzH,KAAKF,MAA5BgG,EAAR,EAAQA,OAAQuB,EAAhB,EAAgBA,WACRlI,EAASa,KAAKR,MAAdL,KAER,OADAgI,QAAQI,IAAIzB,GACG,OAAXA,EACK,cAIP0B,EAD8B,IAA5B1B,EAAO4B,UAAUC,OACL,sBAEA7B,EAAO4B,UAAUd,KAAI,SAAAgB,GAAQ,OACzC,6BAAwBA,EAAS7B,OAAxB6B,EAAS1B,QAKpBuB,EADE3B,EAAOS,QAAUpH,EAAK+G,IAExB,qCACE,wBAAQW,QAAS7G,KAAK+G,YAAtB,2BACA,wBAAQF,QAAS7G,KAAKoH,YAAtB,2BACA,sDAGU,wBAAQP,QAAS7G,KAAKqH,WAAtB,yBAEVA,EACK,cAAC,IAAD,CAAU5H,GAAI,YAAcqG,EAAOI,IAAM,iBAE9B,KAAhBJ,EAAOE,KAEP,qCACE,wCACA,6BAAKhG,KAAKF,MAAMgG,OAAOC,QACvB,mDACA,6BAAKyB,IACJC,KAKL,qCACE,wCACA,6BAAKzH,KAAKF,MAAMgG,OAAOC,QACvB,8CAAiB/F,KAAKF,MAAMgG,OAAOE,QACnC,mDACA,6BAAKwB,IACJC,U,GAtFYrI,aA4FNoF,cAAWsC,GC1FpBe,E,kDACJ,WAAarI,GAAQ,IAAD,8BAClB,cAAMA,IAiBRoD,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SApBlB,EAuBpB8E,eAAiB,SAACjF,GAChBA,EAAMK,iBACN,IAAM3C,EAAK,EAAKf,MAAMwH,MAAMC,OAAO1G,GACnC,EAA0B,EAAKf,MAAvBL,EAAR,EAAQA,KAAMiE,EAAd,EAAcA,SJgBU,SAAC0C,EAAQ3G,EAAMoB,GACzC,OAAO+B,IAAM,CACXE,OAAQ,QACRD,IAAKP,EAAS,YAAczB,EAC5BsE,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJqD,OAAQ,CACNC,MAAOD,EAAOC,MACdC,KAAMF,EAAOE,UIzBjB+B,CAAa,EAAKjI,MAAOX,EAAMoB,GAC5BiD,MAAK,kBAAMJ,EAAQM,KAAK,YAAc,EAAKlE,MAAMwH,MAAMC,OAAO1G,QA5B/C,EA+BpByH,KAAO,WACL,EAAKpI,SAAS,CAAE8H,WAAW,KA7B3B,EAAK5H,MAAQ,CACXiG,MAAO,GACPC,KAAM,GACN0B,WAAW,GANK,E,qDAUpB,WAAsB,IAAD,OACbnH,EAAKP,KAAKR,MAAMwH,MAAMC,OAAO1G,GAC3BpB,EAASa,KAAKR,MAAdL,KACRwG,EAAWxG,EAAMoB,GACdiD,MAAK,SAAC8D,GAAD,OAAc,EAAK1H,SAAS,CAAEmG,MAAOuB,EAAS7E,KAAKqD,OAAOC,MAAOC,KAAMsB,EAAS7E,KAAKqD,OAAOE,UACjGrC,MAAMwD,QAAQvD,S,oBAoBnB,WACE,MAAyB,KAArB5D,KAAKF,MAAMiG,MACN,aAEL/F,KAAKF,MAAM4H,UACN,cAAC,IAAD,CAAUjI,GAAI,YAAcO,KAAKR,MAAMwH,MAAMC,OAAO1G,GAAK,sBAGhE,qCACE,qBAAKI,UAAU,MAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,+CACA,eAACkD,EAAA,EAAD,CAAMC,SAAU9D,KAAK8H,eAArB,UACE,eAACjE,EAAA,EAAKE,MAAN,CAAYC,UAAU,QAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,oBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRC,KAAK,QACLrB,KAAK,QACLC,MAAOhD,KAAKF,MAAMiG,MAClB1B,YAAY,cACZC,SAAUtE,KAAK4C,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAU,OAAtB,UACE,cAACH,EAAA,EAAKI,MAAN,mBACA,cAACJ,EAAA,EAAKK,QAAN,CACEnB,KAAK,OACLC,MAAOhD,KAAKF,MAAMkG,KAClB5B,KAAK,OACLC,YAAY,OACZC,SAAUtE,KAAK4C,kBAGnB,cAAC2B,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,4BAIN,wBAAQyC,QAAS7G,KAAKgI,KAAtB,8B,GA1EmB5I,aAgFZoF,eAAWqD,GC/EpBI,G,kDACJ,WAAazI,GAAQ,IAAD,8BAClB,cAAMA,IA4BR0I,aAAe,WACb,IAAM3H,EAAK,EAAKf,MAAMwH,MAAMC,OAAO1G,GAC3BpB,EAAS,EAAKK,MAAdL,KACRwG,EAAWxG,EAAMoB,GACdiD,MAAK,SAAC8D,GAAD,OAAc,EAAK1H,SAAS,CAAE8H,UAAWJ,EAAS7E,KAAKqD,OAAO4B,eACnElE,MAAK,WACJ,IAAK,IAAI2E,EAAI,EAAGA,EAAI,EAAKrI,MAAM4H,UAAUC,OAAS,EAAGQ,IAAK,CAAC,IAAD,EACpDnF,EAAQ,EAAKlD,MAAM4H,UAAUS,EAAI,GAAGpC,MACpCqC,EAAM,EAAKtI,MAAM4H,UAAUS,EAAI,GAAGjC,SAC1BmC,IAARD,IAAmBA,EAAM,SACfC,IAAVrF,IAAqBA,EAAQ,IACjC,EAAKpD,UAAL,mBAAiB,WAAauI,EAAInF,GAAlC,cAA0C,WAAamF,EAAI,MAAQC,GAAnE,QAGHzE,MAAMwD,QAAQvD,QA3CC,EAgEpBhB,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SAlElB,EAqEpBc,SAAW,SAACjB,GACVA,EAAMK,iBAEN,IAHoB,eAGXiF,GACP,MAA0B,EAAK3I,MAAvBL,EAAR,EAAQA,KAAMiE,EAAd,EAAcA,QACR2C,EAAQ,EAAKjG,MAAM,WAAaqI,GAChCC,EAAM,EAAKtI,MAAM,WAAaqI,EAAI,YAE5BE,IAARD,EClFoB,SAACrC,EAAOuC,EAAQC,EAAUpJ,GACtD,OAAOmD,IAAM,CACXE,OAAQ,OACRD,IAAKP,EAAS,cACd6C,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJmF,SAAU,CACR7B,MAAOA,EACPyC,QAASF,EACTC,SAAUA,EACVhC,MAAOpH,EAAK+G,QDuEZuC,CAAe1C,EAAO,eAAgB,EAAKjG,MAAM4I,IAAKvJ,GACnDqE,MAAK,SAACC,GAAD,OAAS0D,QAAQI,IAAI9D,MAC1BD,MAAK,kBAAM,EAAK0E,kBAChB1E,MAAK,kBAAM,EAAKmF,YAChBnF,MAAK,kBAAMJ,EAAQM,KAAK,YAAc,EAAK5D,MAAM4I,QACjD/E,OAAM,kBAAMwD,QAAQI,IAAI,WCtEL,SAACxB,EAAOuC,EAAQC,EAAUH,EAAKjJ,GAC3D,OAAOmD,IAAM,CACXE,OAAQ,QACRD,IAAKP,EAAS,cAAgBoG,EAC9BvD,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJmF,SAAU,CACR7B,MAAOA,EACPyC,QAASF,EACTC,SAAUA,EACVhC,MAAOpH,EAAK+G,QD4DZ0C,CAAe7C,EAAO,eAAgB,EAAKjG,MAAM4I,IAAKN,EAAKjJ,GACxDqE,MAAK,SAACC,GAAD,OAAS0D,QAAQI,IAAI9D,MAC1BD,MAAK,kBAAM,EAAK0E,kBAChB1E,MAAK,kBAAM,EAAKmF,YAChBnF,MAAK,kBAAMJ,EAAQM,KAAK,YAAc,EAAK5D,MAAM4I,QACjD/E,OAAM,kBAAMwD,QAAQvD,UAlBlBuE,EAAI,EAAGA,EAAI,EAAKrI,MAAM+I,IAAM,EAAGV,IAAM,EAArCA,IAxES,EA+FpBW,cAAgB,SAACjG,GACf,IAAMkG,EAAMlG,EAAMC,OAAOkG,aAAa,YAChCZ,EAAMvF,EAAMC,OAAOkG,aAAa,WACtC,EAAqB,EAAKlJ,MAAlB4I,EAAR,EAAQA,IAAKG,EAAb,EAAaA,IACL1J,EAAS,EAAKK,MAAdL,KACR,GAAY,OAARiJ,GAAwB,KAARA,EAAY,CAC9B,IAAK,IAAID,EAAIY,EAAKZ,EAAIU,EAAKV,IAAK,CAC9B,IAAMc,EAAIC,SAASf,GAAK,OACWE,IAA/B,EAAKvI,MAAM,WAAamJ,IAC1B,EAAKrJ,SAAL,eAAiB,WAAauI,EAAI,KAEpC,EAAKvI,SAAL,eAAiB,WAAauI,EAAI,EAAKrI,MAAM,WAAamJ,KAC1D9B,QAAQI,IAAI0B,EAAI,IAAM,EAAKnJ,MAAM,WAAamJ,IAIhD,OAFA,EAAKrJ,SAAL,aAAgBiJ,IAAK,EAAK/I,MAAM+I,IAAM,GAAI,WAAaA,EAAM,YAC7D,EAAKF,UC/EmB,SAACD,EAAKN,EAAKjJ,GACvC,OAAOmD,IAAM,CACXE,OAAQ,SACRD,IAAKP,EAAS,cAAgBoG,EAC9BvD,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJmF,SAAU,CACRW,SAAUG,ODyEdS,CAAeT,EAAKN,EAAKjJ,GACtBqE,MAAK,kBAAM,EAAK0E,kBAChB1E,MAAK,WACJ,IADW,IAAD,EACD2E,EAAIY,EAAKZ,EAAIU,EAAKV,IAAK,CAAC,IAAD,EACxBc,EAAIC,SAASf,GAAK,OACWE,IAA/B,EAAKvI,MAAM,WAAamJ,IAC1B,EAAKrJ,SAAL,eAAiB,WAAauI,EAAI,KAEpC,EAAKvI,UAAL,mBAAiB,WAAauI,EAAI,EAAKrI,MAAM,WAAamJ,IAA1D,cAA+D,WAAad,EAAI,MAAQ,EAAKrI,MAAM,WAAamJ,EAAI,QAApH,IACA9B,QAAQI,IAAI0B,EAAI,IAAM,EAAKnJ,MAAM,WAAamJ,EAAI,QAEpD,EAAKrJ,UAAL,GAAgBiJ,IAAK,EAAK/I,MAAM+I,IAAM,GAAtC,cAA0C,WAAaA,OAAMR,GAA7D,cAAyE,WAAaQ,EAAM,WAAQR,GAApG,OAED7E,MAAK,kBAAM,EAAKmF,YAChBhF,OAAM,kBAAMwD,QAAQvD,UA/HL,EAkIpBwF,YAAc,WACZ,EAAKxJ,SAAS,CAAEiJ,IAAK,EAAK/I,MAAM+I,IAAM,IACtC,EAAKF,UApIa,EAuIpBA,OAAS,WAEP,IADA,IAAMnB,EAAc,GACXW,EAAI,EAAGA,EAAI,EAAKrI,MAAM+I,IAAM,EAAGV,IACtCX,EAAY9D,KACV,qCACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,UAAW,EAAKlE,MAAM,WAAaqI,EAAI,OAAnD,UACE,cAACtE,EAAA,EAAKI,MAAN,uBACA,cAACJ,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRkF,UAAU,MACVjF,KAAK,WACLpB,MAAO,EAAKlD,MAAM,WAAaqI,GAC/BpF,KAAM,WAAaoF,EACnB9D,YAAY,iBACZC,SAAU,EAAK1B,kBAGnB,eAACiB,EAAA,EAAKE,MAAN,CAAYC,UAAW,SAAWmE,EAAlC,UACE,cAACtE,EAAA,EAAKI,MAAN,0BACA,cAACJ,EAAA,EAAKK,QAAN,CACEoF,UAAQ,EACRvG,KAAK,OACLqB,KAAK,OACLC,YAAY,6BAGhB,wBAAQD,KAAK,SAASyC,QAAS,EAAKiC,cAAeS,WAAUpB,EAAGqB,UAAS,EAAK1J,MAAM,WAAaqI,EAAI,OAArG,wBAIN,OAAOX,GAnKP,EAAK1H,MAAQ,CACXiG,MAAO,GACPC,KAAM,GACN0C,IAAK,GACLG,IAAK,EACLnB,UAAW,IAPK,E,qDAWpB,WAAsB,IAAD,OACbnH,EAAKP,KAAKR,MAAMwH,MAAMC,OAAO1G,GAC3BpB,EAASa,KAAKR,MAAdL,KACRwG,EAAWxG,EAAMoB,GACdiD,MAAK,SAAC8D,GAAD,OAAc,EAAK1H,SAAS,CAAE8I,IAAKpB,EAAS7E,KAAKqD,OAAOI,IAAKH,MAAOuB,EAAS7E,KAAKqD,OAAOC,MAAOC,KAAMsB,EAAS7E,KAAKqD,OAAOE,KAAM0B,UAAWJ,EAAS7E,KAAKqD,OAAO4B,eACtKlE,MAAK,kBAAM,EAAK5D,SAAS,CAAEiJ,IAAK,EAAK/I,MAAM4H,UAAUC,YACrDnE,MAAK,WACJ,IAAK,IAAI2E,EAAI,EAAGA,EAAI,EAAKrI,MAAM+I,IAAM,EAAGV,IAAK,CAAC,IAAD,EACvCnF,EAAQ,EAAKlD,MAAM4H,UAAUS,EAAI,GAAGpC,MACpCqC,EAAM,EAAKtI,MAAM4H,UAAUS,EAAI,GAAGjC,SAC1BmC,IAARD,IAAmBA,EAAM,SACfC,IAAVrF,IAAqBA,EAAQ,IACjC,EAAKpD,UAAL,mBAAiB,WAAauI,EAAInF,GAAlC,cAA0C,WAAamF,EAAI,MAAQC,GAAnE,QAGHzE,MAAMwD,QAAQvD,S,oBA8InB,WACE,IAAM4D,EAAcxH,KAAK2I,SAEzB,MAAc,KADI3I,KAAKF,MAAfiG,MAEC,cAGP,qCACE,6BAAK/F,KAAKF,MAAMiG,QAChB,8CAAiB/F,KAAKF,MAAMkG,QAC5B,cAACzB,EAAA,EAAD,CAAQpE,QAAQ,UAAU0G,QAAS7G,KAAKoJ,YAAxC,0BACA,eAACvF,EAAA,EAAD,CAAMC,SAAU9D,KAAK8D,SAArB,UACG0D,EACD,cAACjD,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,8B,GAtLkBhF,aA6LboF,eAAWyD,IEjMbwB,GAAiB,SAACjB,EAASE,EAAKvJ,GAC3C,OAAOmD,IAAM,CACXE,OAAQ,OACRD,IAAKP,EAAS,aACd6C,QAAS,CACPC,cAAc,UAAD,OAAY3F,EAAK4F,QAEhCtC,KAAM,CACJ6E,SAAU,CACRkB,QAASA,EACTD,SAAUG,EACVnC,MAAOpH,EAAK+G,SCPdwD,G,kDACJ,WAAalK,GAAQ,IAAD,8BAClB,cAAMA,IAuCRoD,aAAe,SAACC,GAAD,OACb,EAAKjD,SAAL,eACGiD,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,SA1ClB,EA6CpBc,SAAW,SAACjB,GACVA,EAAMK,iBACN,IAAK,IAAIiF,EAAI,EAAGA,EAAI,EAAKrI,MAAM+I,IAAM,EAAGV,IAAK,CAC3C,IAAQhJ,EAAS,EAAKK,MAAdL,KACFqJ,EAAU,EAAK1I,MAAM,SAAWqI,GACtCsB,GAAejB,EAAS,EAAK1I,MAAM4I,IAAKvJ,GACrCqE,MAAK,SAACC,GAAD,OAAS0D,QAAQI,IAAI9D,MAC1BD,MAAK,kBAAM,EAAK5D,SAAS,CAAE+J,WAAW,OACtChG,OAAM,kBAAMwD,QAAQI,IAAI,aArDX,EAyDpBqC,WAAa,WACS,EAAKpK,MAAjB4D,QACAM,KAAK,cA3DK,EA8DpBiF,OAAS,WAEP,IADA,IAAMnB,EAAc,GACXW,EAAI,EAAGA,EAAI,EAAKrI,MAAM+I,IAAM,EAAGV,IACtCX,EAAY9D,KACV,mCACE,eAACG,EAAA,EAAKE,MAAN,CAAYC,UAAW,EAAKlE,MAAM,WAAaqI,EAAI,OAAnD,UACE,cAACtE,EAAA,EAAKI,MAAN,UAAa,EAAKnE,MAAM,WAAaqI,KACrC,cAACtE,EAAA,EAAKK,QAAN,CACEC,UAAQ,EACRkF,UAAU,MACVjF,KAAK,WACLpB,MAAO,EAAKlD,MAAM,SAAWqI,GAC7BpF,KAAM,SAAWoF,EACjB9D,YAAY,eACZC,SAAU,EAAK1B,qBAMzB,OAAO4E,GAhFP,EAAK1H,MAAQ,CACXiG,MAAO,GACPC,KAAM,GACN0C,IAAK,GACLG,IAAK,EACLnB,UAAW,GACXmC,UAAW,GACXC,OAAO,EACPH,WAAW,GAVK,E,qDAcpB,WAAsB,IAAD,OACbpJ,EAAKP,KAAKR,MAAMwH,MAAMC,OAAO1G,GAE3BpB,EAASa,KAAKR,MAAdL,KACRwG,EAAWxG,EAAMoB,GACdiD,MAAK,SAACC,GAAD,OAAS,EAAK7D,SAAS,CAAE8I,IAAKjF,EAAIhB,KAAKqD,OAAOI,IAAKH,MAAOtC,EAAIhB,KAAKqD,OAAOC,MAAOC,KAAMvC,EAAIhB,KAAKqD,OAAOE,KAAM0B,UAAWjE,EAAIhB,KAAKqD,OAAO4B,UAAWmC,UAAWpG,EAAIhB,KAAKqD,OAAO+D,eACnLrG,MAAK,kBAAM,EAAK5D,SAAS,CAAEiJ,IAAK,EAAK/I,MAAM4H,UAAUC,YACrDnE,MAAK,WAEJ,IADA,IAAQqG,EAAc,EAAK/J,MAAnB+J,UACC1B,EAAI,EAAGA,EAAI0B,EAAUlC,OAAQQ,IACpC,GAAI0B,EAAU1B,GAAG5B,QAAUpH,EAAK+G,IAE9B,YADA,EAAKtG,SAAS,CAAEkK,OAAO,IAI3B,IAAK,IAAI3B,EAAI,EAAGA,EAAI,EAAKrI,MAAM+I,IAAM,EAAGV,IAAK,CAAC,IAAD,EACvCnF,EAAQ,EAAKlD,MAAM4H,UAAUS,EAAI,GAAGpC,MACpCqC,EAAM,EAAKtI,MAAM4H,UAAUS,EAAI,GAAGjC,SAC1BmC,IAARD,IAAmBA,EAAM,SACfC,IAAVrF,IAAqBA,EAAQ,IACjC,EAAKpD,UAAL,mBAAiB,WAAauI,EAAInF,GAAlC,cAA0C,WAAamF,EAAI,MAAQC,GAAnE,cAAyE,SAAWD,EAAI,IAAxF,QAGHxE,MAAMwD,QAAQvD,S,oBAgDnB,WACE,IAAM4D,EAAcxH,KAAK2I,SACzB,EAA+C3I,KAAKF,MAA5CiG,EAAR,EAAQA,MAAO2B,EAAf,EAAeA,UAAWiC,EAA1B,EAA0BA,UAAWG,EAArC,EAAqCA,MACrC,MAAc,KAAV/D,EACK,cAEgB,IAArB2B,EAAUC,OAEV,qCACE,2FACA,wBAAQd,QAAS7G,KAAK4J,WAAtB,kCAIFE,EAEA,qCACE,2EAEE,uBAFF,mCAKA,wBAAQjD,QAAS7G,KAAK4J,WAAtB,kCAIFD,EAEA,qCACE,kEACA,wBAAQ9C,QAAS7G,KAAK4J,WAAtB,kCAKJ,qCACE,6BAAK5J,KAAKF,MAAMiG,QAChB,8CAAiB/F,KAAKF,MAAMkG,QAC5B,eAACnC,EAAA,EAAD,CAAMC,SAAU9D,KAAK8D,SAArB,UACG0D,EACD,cAACjD,EAAA,EAAD,CAAQpE,QAAQ,UAAUiE,KAAK,SAA/B,8B,GA9HehF,aAqIVoF,eAAWkF,ICxIpBK,G,kDACJ,WAAavK,GAAQ,IAAD,8BAClB,cAAMA,IAQRwK,kBAAoB,WAElB,IAEQ7K,EAAS,EAAKK,MAAdL,KACRwG,EAAWxG,EAHA,4BAIRqE,MAAK,SAACC,GAAD,OAAS,EAAK7D,SAAS,CAAEkG,OAAQrC,EAAIhB,KAAKqD,OAAQ+D,UAAWpG,EAAIhB,KAAKqD,OAAO+D,eAClFrG,MAAK,WAkBJ,IADA,IAAQqG,EAAc,EAAK/J,MAAnB+J,UAjBE,WAkBD1B,GACP,IAAM8B,EAAIJ,EAAU1B,GAAG5B,MACnB2D,EAAI,EACFjB,EAAI,GACV9B,QAAQI,IAAIY,GACZhB,QAAQI,IAAI0B,EAAEkB,SAASF,IACvB9C,QAAQI,IAAI0B,GACZ9B,QAAQI,IAAI0C,GACPhB,EAAEkB,SAASF,KACd,EAAKrK,SAAL,eAAiB,WAAasK,EAAI,KAClC,EAAKtK,SAAL,eAAiB,WAAasK,EAAIL,EAAUvD,QAAO,SAAAgB,GAAQ,OAAIA,EAASf,QAAU0D,OAClFC,IACAjB,EAAEvF,KAAKuG,KAZF9B,EAAI,EAAGA,EAAI0B,EAAUlC,OAAQQ,IAAM,EAAnCA,MAgBVxE,MAAMwD,QAAQvD,QA/CjB,EAAK9D,MAAQ,CACXgG,OAAQ,KACR+D,UAAW,IALK,E,0CA2DpB,WAEE,OADA1C,QAAQI,IAAIvH,KAAKF,OAEf,iC,GA/DkBV,aAqEToF,eAAWuF,ICoFXK,G,kDAxIb,WAAa5K,GAAQ,IAAD,8BAClB,cAAMA,IAOR6D,QAAU,SAAClE,GAAD,OAAU,EAAKS,SAAS,CAAET,UARhB,EAUpByF,UAAY,kBAAM,EAAKhF,SAAS,CAAET,KAAM,QAVpB,EAYpBmB,YAAc,SAACC,GACb,EAAKX,UAAS,SAACE,GACb,MAAO,CAAEuK,UAAWvK,EAAMuK,UAAU/D,QAAO,SAACgE,GAAD,OAASA,EAAI/J,KAAOA,UAd/C,EAkBpB4C,SAAW,YAAoC,IAAjC/C,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,QAASF,EAAc,EAAdA,QACxBI,EAAKgK,cACX,EAAK3K,UAAS,SAACE,GACb,MAAO,CACLuK,UAAU,GAAD,mBAAMvK,EAAMuK,WAAZ,CAAuB,CAAEjK,UAASC,UAASF,UAASI,aApBjE,EAAKT,MAAQ,CACXX,KAAM,KACNkL,UAAW,IAJK,E,0CA2BpB,WAAW,IAAD,OACR,EAA4BrK,KAAKF,MAAzBuK,EAAR,EAAQA,UAAWlL,EAAnB,EAAmBA,KAEnB,OACE,eAAC,WAAD,WACC,cAAC,EAAD,CAAQA,KAAMA,IACbkL,EAAUzD,KAAI,SAACzD,GAAD,OACZ,cAAC,EAAD,CAEE/C,QAAS+C,EAAS/C,QAClBD,QAASgD,EAAShD,QAClBE,QAAS8C,EAAS9C,QAClBE,GAAI4C,EAAS5C,GACbD,YAAa,EAAKA,aALb6C,EAAS5C,OAQnB,uBAAMI,UAAU,YAAhB,UACE,cAAC,IAAD,CACG6J,KAAK,WACLlL,OAAQ,kBACN,cAAC,EAAD,CAAQ6D,SAAU,EAAKA,SAAUE,QAAS,EAAKA,aAGnD,cAAC,IAAD,CACEmH,KAAK,WACLlL,OAAQ,kBACN,cAAC,EAAD,CAAQ6D,SAAU,EAAKA,SAAUE,QAAS,EAAKA,aAGnD,cAAC,EAAD,CACElE,KAAMA,EACNqL,KAAK,YACLlL,OAAQ,kBACN,cAAC,EAAD,CACE6D,SAAU,EAAKA,SACfyB,UAAW,EAAKA,UAChBzF,KAAMA,OAIZ,cAAC,EAAD,CACEA,KAAMA,EACNqL,KAAK,mBACLlL,OAAQ,kBACN,cAAC,EAAD,CAAgB6D,SAAU,EAAKA,SAAUhE,KAAMA,OAGnD,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,cACLlL,OAAQ,kBACN,cAAC,EAAD,CAAc6D,SAAU,EAAKA,SAAUhE,KAAMA,OAGjD,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,WACLlL,OAAQ,kBACN,cAAC,EAAD,CAAc6D,SAAU,EAAKA,SAAUhE,KAAMA,OAGjD,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,eACLlL,OAAQ,kBACN,cAAC,EAAD,CAAQ6D,SAAU,EAAKA,SAAUhE,KAAMA,OAG3C,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,sBACLlL,OAAQ,kBACN,cAAC,GAAD,CAAc6D,SAAU,EAAKA,SAAUhE,KAAMA,OAGjD,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,gCACLlL,OAAQ,kBACN,cAAC,GAAD,CAAe6D,SAAU,EAAKA,SAAUhE,KAAMA,OAGlD,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,2BACLlL,OAAQ,kBACN,cAAC,GAAD,CAAY6D,SAAU,EAAKA,SAAUhE,KAAMA,OAG/C,cAAC,EAAD,CACE8B,OAAK,EACL9B,KAAMA,EACNqL,KAAK,QACLlL,OAAQ,kBACN,cAAC,GAAD,CAAW6D,SAAU,EAAKA,SAAUhE,KAAMA,iB,GAhItCC,aCbZqL,GACJ,cAAC,IAAD,CAAeC,SAAUC,qBAAzB,SACE,cAAC,GAAD,MAIJC,IAAStL,OAAOmL,GAAQI,SAASC,eAAe,U","file":"static/js/main.6ee2896e.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/new-survey' className='nav-link'>Create Survey</NavLink>\n    <NavLink to='/surveys' className='nav-link'>Surveys</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/test' className='nav-link'>Test</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Survey Bite</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://floating-lowlands-79433.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createSurvey = (survey, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/surveys/',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      survey: {\n        title: survey.title,\n        text: survey.text\n      }\n    }\n  })\n}\n\nexport const indexSurveys = (user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/surveys/',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const showSurvey = (user, id) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/surveys/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const deleteSurvey = (user, id) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/surveys/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const updateSurvey = (survey, user, id) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/surveys/' + id,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      survey: {\n        title: survey.title,\n        text: survey.text\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { createSurvey } from '../../api/survey'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass CreateSurvey extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      text: '',\n      id: ''\n    }\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  onCreateSurvey = (event) => {\n    event.preventDefault()\n\n    const { msgAlert, user, history } = this.props\n\n    createSurvey(this.state, user)\n      .then((res) => this.setState({ id: res.data.survey._id }))\n      .then(() =>\n        msgAlert({\n          heading: 'Create Survey Success',\n          message: 'success',\n          variant: 'success'\n        })\n      )\n      .then(() => history.push('/surveys/' + this.state.id))\n      .catch((error) => {\n        // this.setState({ email: '', password: '', passwordConfirmation: '' })\n        msgAlert({\n          heading: 'Error',\n          message: 'Error:' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  render () {\n    const { title, text } = this.state\n\n    return (\n      <div className='row'>\n        <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n          <h3>Create Survey</h3>\n          <Form onSubmit={this.onCreateSurvey}>\n            <Form.Group controlId='title'>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                required\n                type='title'\n                name='title'\n                value={title}\n                placeholder='Enter title'\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Group controlId='text'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                name='text'\n                value={text}\n                type='text'\n                placeholder='Enter description'\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Button variant='primary' type='submit'>Submit</Button>\n          </Form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CreateSurvey)\n","import React, { Component } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { indexSurveys } from '../../api/survey'\n\nclass IndexSurveys extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      surveys: null,\n      show: false,\n      owned: false\n    }\n  }\n\n  viewAllSurveys = () => {\n    const { msgAlert, user } = this.props\n    indexSurveys(user)\n      .then((res) => res.data.surveys.filter((survey) => survey.owner !== this.props.user._id))\n      .then((res) => this.setState({ surveys: res, show: true, owned: false }))\n      .then(() =>\n        msgAlert({\n          heading: 'Index Survey Success',\n          message: 'success',\n          variant: 'success'\n        })\n      )\n      .catch((error) => {\n        msgAlert({\n          heading: 'Error',\n          message: 'Error:' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  viewYourSurveys = () => {\n    const { msgAlert, user } = this.props\n    indexSurveys(user)\n      .then((res) => res.data.surveys.filter((survey) => survey.owner === this.props.user._id))\n      .then((res) => this.setState({ surveys: res, show: true, owned: true }))\n      .then(() =>\n        msgAlert({\n          heading: 'Index Survey Success',\n          message: 'success',\n          variant: 'success'\n        })\n      )\n      .catch((error) => {\n        msgAlert({\n          heading: 'Error',\n          message: 'Error:' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  goBack = () => {\n    this.setState({ show: false })\n  }\n\n  render () {\n    const { surveys, show, owned } = this.state\n    let titleJSX\n    if (owned) {\n      titleJSX = <h3>Your Surveys</h3>\n    } else {\n      titleJSX = <h3>All Surveys</h3>\n    }\n    if (show) {\n      if (surveys === null) {\n        return 'Loading...'\n      } else {\n        return (\n          <div className='row'>\n            <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n              {titleJSX}\n              {surveys.map(survey => {\n                // add filter to show only surveys by owner\n                return <li id={survey._id} key={survey._id}><Link to={'/surveys/' + survey._id}>{survey.title}</Link></li>\n              })}\n              <button onClick={this.goBack}>Back</button>\n            </div>\n          </div>\n        )\n      }\n    }\n\n    return (\n      <>\n        <button onClick={this.viewAllSurveys}>View All Surveys</button> <br/>\n        <button onClick={this.viewYourSurveys}>View Your Surveys</button>\n      </>\n    )\n  }\n}\n\nexport default withRouter(IndexSurveys)\n","import React, { Component } from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport { showSurvey, deleteSurvey } from '../../api/survey'\n\nclass Survey extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      survey: null,\n      takeSurvey: false\n    }\n  }\n\n  componentDidMount () {\n    const id = this.props.match.params.id\n    const { user } = this.props\n    showSurvey(user, id)\n\n      .then((response) => this.setState({ survey: response.data.survey }))\n      .then(() => {\n        console.log(this.state.survey.owner)\n        console.log(user._id)\n      })\n      .catch(console.error)\n  }\n\n  deleteClick = () => {\n    const id = this.props.match.params.id\n    const { user, history } = this.props\n    deleteSurvey(user, id)\n      .then(() => history.push('/surveys'))\n      .catch(console.error)\n  }\n\n  updateClick = () => {\n    const { history } = this.props\n    history.push('/surveys/' + this.props.match.params.id + '/update')\n  }\n\n  takeSurvey = () => {\n    this.setState({ takeSurvey: true })\n  }\n\n  render () {\n    const { survey, takeSurvey } = this.state\n    const { user } = this.props\n    console.log(survey)\n    if (survey === null) {\n      return 'Loading...'\n    }\n    let questionJSX\n    if (survey.questions.length === 0) {\n      questionJSX = 'Need some questions'\n    } else {\n      questionJSX = survey.questions.map(question => (\n        <li key={question._id}>{question.title}</li>\n      ))\n    }\n    let buttonJSX\n    if (survey.owner === user._id) {\n      buttonJSX =\n      <>\n        <button onClick={this.deleteClick}>Delete Survey</button>\n        <button onClick={this.updateClick}>Update Survey</button>\n        <button>See Responses</button>\n      </>\n    } else {\n      buttonJSX = <button onClick={this.takeSurvey}>Take Survey</button>\n    }\n    if (takeSurvey) {\n      return <Redirect to={'/surveys/' + survey._id + '/take-survey'} />\n    }\n    if (survey.text === '') {\n      return (\n        <>\n          <h4>Survey</h4>\n          <h5>{this.state.survey.title}</h5>\n          <h5>All the questions</h5>\n          <ul>{questionJSX}</ul>\n          {buttonJSX}\n        </>\n      )\n    }\n    return (\n      <>\n        <h4>Survey</h4>\n        <h5>{this.state.survey.title}</h5>\n        <p>Description: {this.state.survey.text}</p>\n        <h5>All the questions</h5>\n        <ul>{questionJSX}</ul>\n        {buttonJSX}\n      </>\n    )\n  }\n}\n\nexport default withRouter(Survey)\n","import React, { Component } from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport { updateSurvey, showSurvey } from '../../api/survey'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass UpdateSurvey extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      title: '',\n      text: '',\n      questions: false\n    }\n  }\n\n  componentDidMount () {\n    const id = this.props.match.params.id\n    const { user } = this.props\n    showSurvey(user, id)\n      .then((response) => this.setState({ title: response.data.survey.title, text: response.data.survey.text }))\n      .catch(console.error)\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  onUpdateSurvey = (event) => {\n    event.preventDefault()\n    const id = this.props.match.params.id\n    const { user, history } = this.props\n    updateSurvey(this.state, user, id)\n      .then(() => history.push('/surveys/' + this.props.match.params.id))\n  }\n\n  test = () => {\n    this.setState({ questions: true })\n  }\n\n  render () {\n    if (this.state.title === '') {\n      return 'Loading...'\n    }\n    if (this.state.questions) {\n      return <Redirect to={'/surveys/' + this.props.match.params.id + '/update/questions'} />\n    }\n    return (\n      <>\n        <div className='row'>\n          <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n            <h3>Update Survey</h3>\n            <Form onSubmit={this.onUpdateSurvey}>\n              <Form.Group controlId='title'>\n                <Form.Label>Title</Form.Label>\n                <Form.Control\n                  required\n                  type='title'\n                  name='title'\n                  value={this.state.title}\n                  placeholder='Enter title'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Form.Group controlId='text'>\n                <Form.Label>Text</Form.Label>\n                <Form.Control\n                  name='text'\n                  value={this.state.text}\n                  type='text'\n                  placeholder='text'\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n              <Button variant='primary' type='submit'>Submit</Button>\n            </Form>\n          </div>\n        </div>\n        <button onClick={this.test}>Questions</button>\n      </>\n    )\n  }\n}\n\nexport default withRouter(UpdateSurvey)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createQuestion, deleteQuestion, updateQuestion } from '../../api/question'\nimport { showSurvey } from '../../api/survey'\n\nclass EditQuestions extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: '',\n      text: '',\n      sId: '',\n      amt: 0,\n      questions: []\n    }\n  }\n\n  componentDidMount () {\n    const id = this.props.match.params.id\n    const { user } = this.props\n    showSurvey(user, id)\n      .then((response) => this.setState({ sId: response.data.survey._id, title: response.data.survey.title, text: response.data.survey.text, questions: response.data.survey.questions }))\n      .then(() => this.setState({ amt: this.state.questions.length }))\n      .then(() => {\n        for (let i = 1; i < this.state.amt + 1; i++) {\n          let value = this.state.questions[i - 1].title\n          let qId = this.state.questions[i - 1]._id\n          if (qId === undefined) qId = ''\n          if (value === undefined) value = ''\n          this.setState({ ['question' + i]: value, ['question' + i + 'key']: qId })\n        }\n      })\n      .catch(console.error)\n  }\n\n  onShowSurvey = () => {\n    const id = this.props.match.params.id\n    const { user } = this.props\n    showSurvey(user, id)\n      .then((response) => this.setState({ questions: response.data.survey.questions }))\n      .then(() => {\n        for (let i = 1; i < this.state.questions.length + 1; i++) {\n          let value = this.state.questions[i - 1].title\n          let qId = this.state.questions[i - 1]._id\n          if (qId === undefined) qId = ''\n          if (value === undefined) value = ''\n          this.setState({ ['question' + i]: value, ['question' + i + 'key']: qId })\n        }\n      })\n      .catch(console.error)\n  }\n\n  // onShowSurvey = () => {\n  //   const id = this.props.match.params.id\n  //   const { user } = this.props\n  //   showSurvey(user, id)\n  //     .then((response) => this.setState({ sId: response.data.survey._id, title: response.data.survey.title, text: response.data.survey.text, questions: response.data.survey.questions }))\n  //     .then(() => this.setState({ amt: this.state.questions.length }))\n  //     .then(() => {\n  //       for (let i = 1; i < this.state.amt + 1; i++) {\n  //         let value = this.state.questions[i - 1].title\n  //         let qId = this.state.questions[i - 1]._id\n  //         if (qId === undefined) qId = ''\n  //         if (value === undefined) value = ''\n  //         this.setState({ ['question' + i]: value, ['question' + i + 'key']: qId })\n  //       }\n  //     })\n  //     .catch(console.error)\n  // }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    // console.log('on Submit running??')\n    for (let i = 1; i < this.state.amt + 1; i++) {\n      const { user, history } = this.props\n      const title = this.state['question' + i]\n      const qId = this.state['question' + i + 'key']\n      // console.log(this.state.sId)\n      if (qId === undefined) {\n        createQuestion(title, 'short answer', this.state.sId, user)\n          .then((res) => console.log(res))\n          .then(() => this.onShowSurvey())\n          .then(() => this.setJSX())\n          .then(() => history.push('/surveys/' + this.state.sId))\n          .catch(() => console.log('fail'))\n      } else {\n        updateQuestion(title, 'short answer', this.state.sId, qId, user)\n          .then((res) => console.log(res))\n          .then(() => this.onShowSurvey())\n          .then(() => this.setJSX())\n          .then(() => history.push('/surveys/' + this.state.sId))\n          .catch(() => console.error)\n      }\n    }\n  }\n\n  deleteDynamic = (event) => {\n    const num = event.target.getAttribute('data-num')\n    const qId = event.target.getAttribute('data-id')\n    const { sId, amt } = this.state\n    const { user } = this.props\n    if (qId === null || qId === '') {\n      for (let i = num; i < amt; i++) {\n        const r = parseInt(i) + 1\n        if (this.state['question' + r] === undefined) {\n          this.setState({ ['question' + i]: '' })\n        }\n        this.setState({ ['question' + i]: this.state['question' + r] })\n        console.log(r + ' ' + this.state['question' + r])\n      }\n      this.setState({ amt: this.state.amt - 1, ['question' + amt]: null })\n      this.setJSX()\n      return\n    }\n    deleteQuestion(sId, qId, user)\n      .then(() => this.onShowSurvey())\n      .then(() => {\n        for (let i = num; i < amt; i++) {\n          const r = parseInt(i) + 1\n          if (this.state['question' + r] === undefined) {\n            this.setState({ ['question' + i]: '' })\n          }\n          this.setState({ ['question' + i]: this.state['question' + r], ['question' + i + 'key']: this.state['question' + r + 'key'] })\n          console.log(r + ' ' + this.state['question' + r + 'key'])\n        }\n        this.setState({ amt: this.state.amt - 1, ['question' + amt]: undefined, ['question' + amt + 'key']: undefined })\n      })\n      .then(() => this.setJSX())\n      .catch(() => console.error)\n  }\n\n  addQuestion = () => {\n    this.setState({ amt: this.state.amt + 1 })\n    this.setJSX()\n  }\n\n  setJSX = () => {\n    const questionJSX = []\n    for (let i = 1; i < this.state.amt + 1; i++) {\n      questionJSX.push(\n        <>\n          <Form.Group controlId={this.state['question' + i + 'key']}>\n            <Form.Label>Question</Form.Label>\n            <Form.Control\n              required\n              maxLength='300'\n              type='question'\n              value={this.state['question' + i]}\n              name={'question' + i}\n              placeholder='Enter question'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId={'answer' + i}>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              disabled\n              name='text'\n              type='text'\n              placeholder='Short Answer Question'\n            />\n          </Form.Group>\n          <button type='button' onClick={this.deleteDynamic} data-num={i} data-id={this.state['question' + i + 'key']}>Delete</button>\n        </>\n      )\n    }\n    return questionJSX\n  }\n\n  render () {\n    const questionJSX = this.setJSX()\n    const { title } = this.state\n    if (title === '') {\n      return 'Loading ...'\n    }\n    return (\n      <>\n        <h4>{this.state.title}</h4>\n        <p>Description: {this.state.text}</p>\n        <Button variant='primary' onClick={this.addQuestion}>Add Question</Button>\n        <Form onSubmit={this.onSubmit}>\n          {questionJSX}\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </>\n    )\n  }\n}\n\nexport default withRouter(EditQuestions)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createQuestion = (title, option, surveyId, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/questions/',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      question: {\n        title: title,\n        content: option,\n        surveyId: surveyId,\n        owner: user._id\n      }\n    }\n  })\n}\n\nexport const updateQuestion = (title, option, surveyId, qId, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + '/questions/' + qId,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      question: {\n        title: title,\n        content: option,\n        surveyId: surveyId,\n        owner: user._id\n      }\n    }\n  })\n}\n\nexport const deleteQuestion = (sId, qId, user) => {\n  return axios({\n    method: 'DELETE',\n    url: apiUrl + '/questions/' + qId,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      question: {\n        surveyId: sId\n      }\n    }\n  })\n}\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const createResponse = (content, sId, user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/responses',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      response: {\n        content: content,\n        surveyId: sId,\n        owner: user._id\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { showSurvey } from '../../api/survey'\nimport { createResponse } from '../../api/response'\n\nclass TakeSurvey extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      title: '',\n      text: '',\n      sId: '',\n      amt: 0,\n      questions: [],\n      responses: [],\n      taken: false,\n      completed: false\n    }\n  }\n\n  componentDidMount () {\n    const id = this.props.match.params.id\n    // const id = '62701ac832095a25707f3156'\n    const { user } = this.props\n    showSurvey(user, id)\n      .then((res) => this.setState({ sId: res.data.survey._id, title: res.data.survey.title, text: res.data.survey.text, questions: res.data.survey.questions, responses: res.data.survey.responses }))\n      .then(() => this.setState({ amt: this.state.questions.length }))\n      .then(() => {\n        const { responses } = this.state\n        for (let i = 0; i < responses.length; i++) {\n          if (responses[i].owner === user._id) {\n            this.setState({ taken: true })\n            return\n          }\n        }\n        for (let i = 1; i < this.state.amt + 1; i++) {\n          let value = this.state.questions[i - 1].title\n          let qId = this.state.questions[i - 1]._id\n          if (qId === undefined) qId = ''\n          if (value === undefined) value = ''\n          this.setState({ ['question' + i]: value, ['question' + i + 'key']: qId, ['answer' + i]: '' })\n        }\n      })\n      .catch(console.error)\n  }\n\n  handleChange = (event) =>\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  onSubmit = (event) => {\n    event.preventDefault()\n    for (let i = 1; i < this.state.amt + 1; i++) {\n      const { user } = this.props\n      const content = this.state['answer' + i]\n      createResponse(content, this.state.sId, user)\n        .then((res) => console.log(res))\n        .then(() => this.setState({ completed: true }))\n        .catch(() => console.log('fail'))\n    }\n  }\n\n  allSurveys = () => {\n    const { history } = this.props\n    history.push('/surveys/')\n  }\n\n  setJSX = () => {\n    const questionJSX = []\n    for (let i = 1; i < this.state.amt + 1; i++) {\n      questionJSX.push(\n        <>\n          <Form.Group controlId={this.state['question' + i + 'key']}>\n            <Form.Label>{this.state['question' + i]}</Form.Label>\n            <Form.Control\n              required\n              maxLength='300'\n              type='question'\n              value={this.state['answer' + i]}\n              name={'answer' + i}\n              placeholder='Short Answer'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n        </>\n      )\n    }\n    return questionJSX\n  }\n\n  render () {\n    const questionJSX = this.setJSX()\n    const { title, questions, completed, taken } = this.state\n    if (title === '') {\n      return 'Loading ...'\n    }\n    if (questions.length === 0) {\n      return (\n        <>\n          <p>This survey has no questions. Please return to all surveys</p>\n          <button onClick={this.allSurveys}>Return to Surveys</button>\n        </>\n      )\n    }\n    if (taken) {\n      return (\n        <>\n          <p>\n            It seems you&apos;ve already taken this survey.\n            <br/>\n            Please return to all surveys.\n          </p>\n          <button onClick={this.allSurveys}>Return to Surveys</button>\n        </>\n      )\n    }\n    if (completed) {\n      return (\n        <>\n          <p>Thank you for taking this survey!</p>\n          <button onClick={this.allSurveys}>Return to Surveys</button>\n        </>\n      )\n    }\n    return (\n      <>\n        <h4>{this.state.title}</h4>\n        <p>Description: {this.state.text}</p>\n        <Form onSubmit={this.onSubmit}>\n          {questionJSX}\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </>\n    )\n  }\n}\n\nexport default withRouter(TakeSurvey)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { showSurvey } from '../../api/survey'\n\nclass Responses extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      survey: null,\n      responses: []\n    }\n  }\n\n  componentDidMount = () => {\n    // const id = this.props.match.params.id\n    const id = '62701ac832095a25707f3156'\n    // const id = '62701acc32095a25707f3158'\n    const { user } = this.props\n    showSurvey(user, id)\n      .then((res) => this.setState({ survey: res.data.survey, responses: res.data.survey.responses }))\n      .then(() => {\n        // console.log(this.state.survey.owner)\n        // console.log(user._id)\n        // const { responses } = this.state\n        // for (let t = 1; responses.length !== 0; t++) {\n        //   // console.log(responses[0])\n        //   const o = responses[0].owner\n        //     this.setState({ ['response' + t]: [] })\n        //     this.state['response' + t].push(responses[0])\n        //     responses.shift()\n        //   for (let i = 0; i < responses.length; i++) {\n        //     if (o === responses[i].owner) {\n        //       this.state['response' + t].push(responses[i])\n        //     }\n        //   }\n        // }\n\n        const { responses } = this.state\n        for (let i = 0; i < responses.length; i++) {\n          const o = responses[i].owner\n          let t = 1\n          const r = []\n          console.log(i)\n          console.log(r.includes(o))\n          console.log(r)\n          console.log(o)\n          if (!r.includes(o)) {\n            this.setState({ ['response' + t]: [] })\n            this.setState({ ['response' + t]: responses.filter(response => response.owner === o) })\n            t++\n            r.push(o)\n          }\n        }\n      })\n      .catch(console.error)\n  }\n\n  /* while responses is not empty\n  for loop to get i\n    take first response owner and push to new arry state (response i)\n      iterate through everything to find matching and push into new array\n    repeat\n  */\n  render () {\n    console.log(this.state)\n    return (\n      <>\n      </>\n    )\n  }\n}\n\nexport default withRouter(Responses)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport CreateSurvey from './components/survey/CreateSurvey'\nimport IndexSurveys from './components/survey/IndexSurveys'\nimport Survey from './components/survey/Survey'\nimport UpdateSurvey from './components/survey/UpdateSurvey'\nimport EditQuestions from './components/survey/EditQuestions'\nimport TakeSurvey from './components/survey/TakeSurvey'\nimport Responses from './components/survey/Responses'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n\t      <Header user={user} />\n\t      {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n\t      <main className='container'>\n\t        <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/new-survey'\n            render={() => (\n              <CreateSurvey msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/surveys'\n            render={() => (\n              <IndexSurveys msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/surveys/:id'\n            render={() => (\n              <Survey msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/surveys/:id/update'\n            render={() => (\n              <UpdateSurvey msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/surveys/:id/update/questions'\n            render={() => (\n              <EditQuestions msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/surveys/:id/take-survey'\n            render={() => (\n              <TakeSurvey msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/test'\n            render={() => (\n              <Responses msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}